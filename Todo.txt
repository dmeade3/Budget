Program:

    [ ] make account selector pane function
    [ ] make budget tab use the current transactions to fill out data function


    [ ] sonce delete hit disable all input boxes
    [ ] sort all comboboxes
    [ ] dont bring up login popup if no password set
        -set password in some kind of admin preferences page
        -needs to be a way to set password
            -type in old password, then new
    [ ] in transaction editor date should be a date picker
    [ ] inside the login pane
        -handle right pass
        -wrong pass
            -ask again for the password for 3 times then exit like cancel, opportunity to try again after trying to change user again
        -cancel
            -should not load new user or change the user in combo box

    [ ] in editors, after hitting save or delete the popup should close
    [ ] make in main program data a list of account that are selected on the tree, will be destroyed and filled after every account tree change
    [ ] when reloading anything, keep the CURRENT_USER the same
        -if it was not changed
    [ ] when opening a data csv file if it doesnt exist then create a new one
        -maybe create all new csv files on user creation, include the headers

    -delete should bring up a separate gui ask are you sure?
    -when transactions read in they need to have info added to them
        -category empty unless previous mapping exists

    -budget tab a budget for the whole user not just a single account
    -input rules on all text fields / try catches and error messages
        -this really means test stupid inputs and make sure the program doesnt let it go through / breaks
    -make user password protected as an option
        -make users read into an array or user objects and mapped to a password / if pass blank then no password
        -encrypt the passwords
            -this is going to be its own thing here
            -encrypt decrypt package

    -test with completely blank user and make sure doesnt fail
    -be able to add budget sections
    -be able to add transactions
    -be able to add accounts

    Hierarchy of objects:
        Budget Program:
            Gui:
                Center:
                    -is tabbed:

                        Summary Tab:
                            -graphs as part of it, should also have a pane of non labeled data
                            -give breakdown of where money is being spent as well
                                -pie graph of accounts

                        Future tab:
                            -help predict future financial status

            User:
                -user has associated mapping of vendors to categories

                Budget: will have to make this object and store it in the mainprogramdata
                    -list of budget sections
                    -total budgeted
                    -only need a getter because it should be calculated for each call
                    -total spent

                Account:
                    -balance should be stored in the accounts csv file and updated everytime there is a change to it

                TransactionParser:
                    -parser interface that all parsers have to implement

                    Switch statement to what kind of data it is:
                        csv:

                        other...:
                            -find these file formats

    -known vendors list
        -mapped to a specific category to help along with the category matching
        -learns over time as you set more rules
        -is saved and read in each time
            -EX   Walmart:->:groceries
                :->: as the mapping symbol

    -store balance info
        -admin section to set current balance when first setting up program

    Functionality:
        -take transactions from mint
        -investment tracking
        -should say when account was last updated in summary tab
            -will need to add this to the account csv
            -make file find and replace util
                -make very general csv find and replace for whole rows / individual items

        -when asking about where the csv came from, ask about accounts or bank, account should have mapping of csv in it
        -when account clicked on it should update the middle scrollpane with that account info
        -replace all system.out with logger statements
        -eventually take out all the creation dates
            -if ever going public with this will need to wipe all date info on it
            -github has the dates too
                -would need to delete the repo and remake it with files with fresh dates

    References:
        css:
            http://www.guigarage.com/2013/09/lets-get-wet/
            https://examples.javacodegeeks.com/desktop-java/javafx/javafx-css-tutorial/
            https://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html#region