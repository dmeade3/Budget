Program:
    Current:
        Should be the top 3 things working on currently
            [ ] structure the handling of transactions like a database
                -can only access through users who own the transactions
                -keep all transactions in one file
                    -when reading a new file in compare against what you already have
                    -once in main transaction file its assumed to be correct


    [ ] format transaction table better columns
    [ ] when reading in transactions, dont read in the mystery line
        -transaction should not hae fields that are like this / un-needed
    [ ] in transaction editor there should be a drop down for categories
        -categories should either an enum
        -later implement the option to add your own category
    [ ] make in main program data a list of account that are selected on the tree, will be destroyed and filled after every account tree change
    [ ] format transaction table so it always fills up whole table
    [ ] add user button / check if user exists / create transactions folder when user created / create transaction folder when tried to be accessed and not found
    [ ] have a user csv with user info in it
    [ ] don't read in duplicate transactions
    [ ] have a cleanup function that will after a transaction read in cleanup all transactions in the folder that are duplicates
        -only clean up if the 2 duplicates are in different files, must be in different files, same date, same amount, same check number
        -when taking in a new transaction file just place it in the right folder and read in after placed


    -be able to delete transaction from transaction tab
        -right brings up a small choice box to duplicate or delete

    -transaction date should actually be a date
    -in budget amount spent shouldn't be adjustable in gui, its calculated based on the selected time
    -when transactions read in they need to have info added to them
        -needs a place for the account
        -need to add a place for a category
            -category empty unless previous mapping exists

    -budget tab a budget for the whole account
        -within a time range in the bottom panel  1 week / 1 month / 2 / 3 / 6
            -make those time ranges an enum that hold a day count

    -input rules on all text fields / try catches and error messages
    -make user password protected as an option
        -make users read into an array or user objects and mapped to a password / if pass blank then no password
        -encrypt the passwords
            -this is going to be its own thing here
            -encrypt decrypt package

    -the right side should be a summary of what is in the middle if the gui / unless the
    -make header in transactions the table header and not just a line
    -on close before calling reload should save off any visual settings so you don't have to re-click settings
    -test with completely blank user and make sure doesnt fail
    -when reading in transactions don't read in duplicates
    -eventually take out all the creation dates
        -if ever going public with this will need to wipe all date info on it
    -be able to add budget sections
    -be able to add transactions
    -be able to add users
    -be able to add accounts


    Hierarchy of objects:
        Budget Program:
            Gui:
                Bottom:
                    -bottom portion could be used to filter out results
                    -changing of tabs should trigger this panel to change
                        -might have different types of filters for different tabs

                Left:
                    -account selection
                    -credit cards handled differently than checking
                    -savings account handled like checking but with the addition of predicting how much will be there in an amount of time
                    -maybe handle brokerage the same way

                Right:

                Center:
                    -is tabbed:
                        Future tab:
                            tries to help predict future status of finances

                        Summary Tab:
                            -graphs as part of it, should also have a pane of non labeled data
                            -give breakdown of where money is being spent as well
                                -pie graph of accounts

                        Transaction tab:

                        Budget tab:
                            -if budget clicked then an edit page appears with options to edit the budget
                            -only have a slider to adjust the budget on the edit page

            User:
                -has associated mapping of vendors to categories

                Budget: will have to make this object and store it in the mainprogramdata
                    -list of budget sections
                    -total budgeted
                    -only need a getter because it should be calculated for each call
                    -total spent

                    Budget Section:
                        -name
                        -amount total
                        -amount spent
                            -from this you can derive from transactions in the same category

                Account:
                    -balance

                BankInfoParser:
                    -parser interface that all parsers have to implement

                    Switch statement to what kind of data it is:
                        csv:

                        other...:
                            -find these file formats

    -known vendors list
        -mapped to a specific category to help along with the category matching
        -maybe make categories an enum
            -only disadvantage is that you cant modify
        -learns over time as you setr more rules
        -is saved and read in each time
            -EX   Walmart:->:groceries
                :->: as the mapping symbol

    -store balance info
        -admin section to set current balance when first setting up program

    Functionality:
        -take transactions from mint
        -will need to format read in transactions
        -investment tracking
        -should say when account was last updated in some kind of info tab
            -will need to add this to the account csv
            -make file find and replace util
        -help predict future financial status
        -when account clicked on it should update the middle scrollpane with that account info
        -bottom section should be able to switch the view between a 1 week / 1 month / 2 / 3 / 6 / year / all
            -combo box
            -maybe enum if it makes sense
            -converting function that should
            -be for tabs budget, summary
                -future should have a separate time picker for date intervals into the future
                -summary should default be 1 week back

    References:
        css:
            http://www.guigarage.com/2013/09/lets-get-wet/
            https://examples.javacodegeeks.com/desktop-java/javafx/javafx-css-tutorial/
            https://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html#region