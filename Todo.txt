Program:
    Current:
        Should be the top 3 things working on currently
            [ ] structure the handling of transactions like a database
                -can only access through users who own the transactions
                -keep all transactions in one file
                    -when reading a new file in compare against what you already have
                    -once in main transaction file its asumed to be correct





    [ ] add user button / check if user exists / create transactions folder when user created / create transaction folder when tried to be acessed and not found
    [ ] dont read in duplicate transactions
    [ ] have a cleanup function that will after a transaction read in cleanup all transactions in the folder that are duplicates
        -only clean up if the 2 duplicates are in different files, must be in different files, same date, same ammount, same check number
        -when taking in a new transsaction file just place it in the right folder and read in after placed

    [ ] make transaction tab a formated excel like table wil columns
        -completely redo everything to do with transactions to be simpler, no more string building and comparing (hacky)
        -editing of transaction should be done in place unless its not as good as whats here
        -edit the formatting of the transaction table


    -all data should be gotten through the user class
        -will have to restructure MainProgram data to only really hold users and the methods to fill out the user
    -budget based off transactions and date selected
    -be able to delete transaction from transaction tab
        -right brings up a small choice box to duplicate or delete

    -transaction date should actually be a date
    -in budget ammount spent shouldnt be adjustable in gui, its calculated based on the selected time
    -when transactions read in they need to have info added to them
        -needs a place for the account
        -need to add a place for a catargory
            -catagory empty unless previous mapping exists
    -budget tab a budget for the whole account
    -input rules on all text fields / try catches and error messages
    -make user password protected as an option
        -make users read into an array or user objects and mapped to a password / if pass blank then no password
        -encrypt the passwords
            -this is going to be its own thing here
            -encrypt dectrpt package
    -the right side should be a summary of what is in the middle if the gui
    -make header in transactions the table header and not just a line
    -on close before calling reload should save off any visual settings so you dont have to re-click settings
    -test with completely blank user and make sure doesnt fail
    -when reading in transactions dont read in duplicates
    -be able to add budget sections
    -be able to add transactions
    -be able to add users
    -be able to add accounts


    Hierarchy of objects:
        Budget Program:
            Gui:
                Bottom:
                    -bottom portion could be used to filter out results
                    -changing of tabs should trigger this panel to change
                        -might have different types of filters for different tabs

                Left:
                    -account selection
                    -credit cards handled differently than checking
                    -savings account handled like checking but with the addition of predicting how much will be there in an amount of time
                    -maybe handle brokerage the same way

                Right:

                Center:
                    -is tabbed:
                        Future tab:
                            tries to help predict future status of finances

                        Summary Tab:
                            -graphs as part of it, should also have a pane of non labeled data

                        Transaction tab:

                        Budget tab:
                            -if budget clicked then an edit page appears with options to edit the budget
                            -only have a slider to adjust the budget on the edit page

            User:
                -has associated mapping of vendors to categories

                Budget:
                    -name
                    -total budgeted
                    -total spent

                    Budget Section:
                        -name
                        -amount total
                        -amount spent
                            -from this you can derive how much is left

                Account:
                    -account name
                    -balance

                BankInfoParser:

                    -drag and drop capability
                    -parser interface that all parsers have to implement

                    Switch statment to what kind of data it is:

                        csv:

                        other...:
                            -find these file formats


    -known vendors list
        -mapped to a specific catagory to help along with the catagory matching
        -maybe make catagories an enum
            -only disadvantage is that you cant modify
        -learns over time
        -is saved and read in each time
            -EX   Walmart:->:groceries
                :->: as the mapping symbol

    history:
        -store csv files of account activity for future reference
            -use these files for all the history with transactions

        -store balance info
            -admin section to set current balance when first setting up program


    Functionality:
        -take transactions from mint
        -will need to format read in transactions
        -investment tracking
        -should say when account was last updated in some kind of info tab
            -will need to add this to the account csv
            -make file find and replace util
        -help predict future financial status
        -budget should be able to set for any amount of time wanted
        -when account clicked on it should update the middle scrollpane with that account info
        -admin section should be able to switch the view between a 1 week / 1 month / 2 / 3 / 6 / year budget view
            -combo box
            -maybe enum if it makes sense
            -converting function that should


    References:
        css:
            http://www.guigarage.com/2013/09/lets-get-wet/
            https://examples.javacodegeeks.com/desktop-java/javafx/javafx-css-tutorial/
            https://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html#region