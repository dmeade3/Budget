Program:

    Current:
         Should be the top 3 things working on currently
            [ ] add user button / check if user exists / create transactions folder when user created / create transaction folder when tried to be acessed and not found
            [ ] dont read in duplicate transactions
            [ ] have a cleanup function that will after a certain event cleanup all transactions in the folder that are duplicates
                -only clean up if the 2 duplicatesa re in different files
                -when taking in a new transsaction file just place it in the right folder and read in after placed
            [ ] refactor what i have to be smaller classes, especially gui, for ease of future use
            [ ] be able to add users


    -budget based off transactions and date selected
    -when transactions read in they need to have info added to them
        -needs a place for the account
        -need to add a place for a catargory
            -catagory empty unless previous mapping exists
    -budget tab a budget for the whole account
    -input rules on all text fields / try catches and error messages
    -make user password protected as an option
    -the right side should be a summary of what is in the middle if the gui
    -make header in transactions a different color and font
    -on close before calling reload should save off any visual settings so you dont have to re-click settings
    -bottom portion could be used to filter out results
    -test with completely blank user and make sure doesnt fail
    -when reading in transactions dont read in duplicates
    -be able to add budget sections
    -be able to add transactions
    -be able to add users
    -be able to add accounts


    Hierarchy of objects:

        Budget Program:

            Gui:
                -each page should have its own class separate from the launch class (which should be very small)

                Top:
                    -admin like options,

                Bottom:
                    -idk if this need to be a panel

                Left:
                    -account selection
                    -credit cards handled differently than checking
                    -savings account handled like checking but with the addition of predicting how much will be there in an amount of time
                    -maybe handle brokerage the same way

                Right:

                Center:
                    -is tabbed:
                        Future tab:
                            tries to help predict future status of finances

                        Summary Tab:
                            -graphs

                        Transaction tab:

                        Budget tab:
                            -if budget clicked then an edit page appears with options to edit the budget
                            -only have a slider to adjust the budget on the edit page

            User: Has a Budget
                Budget has budget sections

            User: Has account's

            has a = extends
            is a = implements

            User:
                -has associated mapping of vendors to categories

                Budget:
                    -name
                    -total budgeted
                    -total spent

                    Budget Section:
                        -name
                        -amount total
                        -amount spent
                            -from this you can derive how much is left

                Account:
                    -account name
                    -balance

                BankInfoParser:

                    -drag and drop capability
                    -parser interface that all parsers have to implement

                    Switch statment to what kind of data it is:

                        csv:

                        other...:
                            -find these file formats


    -known vendors list
        -mapped to a specific catagory to help along with the catagory matching
        -maybe make catagories an enum
            -only disadvantage is that you cant modify
        -learns over time
        -is saved and read in each time
            -EX   Walmart:->:groceries
                :->: as the mapping symbol

    history:
        -store csv files of account activity for future reference
            -use these files for all the history with transactions

        -store balance info
            -admin section to set current balance when first setting up program


    Functionality:
        -investment tracking
        -light themed
        -indicate the user in the top admin portion

        -should say when account was last updated in some kind of info tab

        -help predict future financial status

        budget should be able to set for any amount of time wanted

        when account clicked on it should update the middle scrollpane with that account info

        admin section should be able to switch the view between a 1 week / 1 month / 2 / 3 / 6 / year budget view
            -combo box
            -maybe enum if it makes sense
            -converting function that should


    References:
        css:
            http://www.guigarage.com/2013/09/lets-get-wet/
            https://examples.javacodegeeks.com/desktop-java/javafx/javafx-css-tutorial/
            https://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html#region